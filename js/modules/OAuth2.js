/**********************************************************
 * Module imports
 *
 * OAuth2 HELPER FUNCTIONS
 *
 **********************************************************/
// Common modules
import CONFIGURATION				from "../data/config.json" with { type: "json" };
// Common functions
import * as COMMON					from "./common.functions.js";
// Common Classes and Exceptions ("Types")
import * as TYPES					from "./common.types.js";
// Common JWT functions
import * as JWT						from "./OAuth2/JWT.js";


/**********************************************************
 * Module Constants
 **********************************************************/
// Module SELF constants
const MODULE_NAME					= COMMON.getModuleName( import.meta.url );
const MODULE_VERSION				= "1.0.0";
const MODULE_PREFIX					= `[${MODULE_NAME}]: `;

// Logging constants
const DEBUG							= CONFIGURATION.global.debug;
const DEBUG_FOLDED					= CONFIGURATION.global.debug_folded;

// Inner constants


/**********************************************************
 * Module Variables
 **********************************************************/
let GROUP_DEBUG						= DEBUG && DEBUG_FOLDED;


/**********************************************************
 * PRIVATE Functions
 **********************************************************/


/**********************************************************
 * PUBLIC Functions
 **********************************************************/
/*
 * Validates the token.
 *
 * + Check the expiration time
 * + Check that the token has been generated by the same ISS
 *
 */
export function validateAccessToken( accessToken, userAuthServerDiscovery, userAuthentication ) {
	const PREFIX = `[${MODULE_NAME}:validateAccessToken] `;
	if (GROUP_DEBUG) console.groupCollapsed( PREFIX );

	if (DEBUG) console.debug( PREFIX + "Received User Access Token:", accessToken );
	if (DEBUG) console.debug( PREFIX + "Received User Authentication Server Discovery information:", userAuthServerDiscovery );
	if (DEBUG) console.debug( PREFIX + "Received User Access Authentication:", userAuthentication );

	// Checks
	// ------------------------------------------
	if ( COMMON.isNullOrEmpty( accessToken ) ) {
		if (DEBUG) console.debug( PREFIX + "-- END" );
		if (GROUP_DEBUG) console.groupEnd();
		throw new TYPES.AccessTokenError( 1, "No access token" );
	}

	if ( COMMON.isNullOrEmpty( userAuthServerDiscovery ) ) {
		if (DEBUG) console.debug( PREFIX + "-- END" );
		if (GROUP_DEBUG) console.groupEnd();
		throw new TYPES.AccessTokenError( 2, "No Auth Server Discovery" );
	}

	if ( COMMON.isNullOrEmpty( userAuthentication ) ) {
		if (DEBUG) console.debug( PREFIX + "-- END" );
		if (GROUP_DEBUG) console.groupEnd();
		throw new TYPES.AccessTokenError( 3, "No user authentication" );
	}

	if (DEBUG) console.debug( PREFIX + "Received User Access Token:", JWT.jwtToPrettyJSON( accessToken ) );
	if (DEBUG) console.debug( PREFIX + "Received User Authentication Server Discovery information:", COMMON.prettyJson( userAuthServerDiscovery ) );
	if (DEBUG) console.debug( PREFIX + "Received User Access Authentication:", COMMON.prettyJson( userAuthentication ) );

	if (DEBUG) console.debug( PREFIX + "-- END" );
	if (GROUP_DEBUG) console.groupEnd();
	return true;
}

